import com.liferay.gradle.plugins.gulp.ExecuteGulpTask
import com.liferay.gradle.util.FileUtil

import groovy.json.JsonBuilder

ext {
	liferayHome = "${project.rootDir}/../bundles"
	appServerDir = "${liferayHome}/tomcat-7.0.62"
	deployDir = "${liferayHome}/deploy"
}

buildscript {
	dependencies {
		classpath group: "com.liferay", name: "com.liferay.gradle.plugins", version: "1.0.47+"
		classpath group: "com.liferay", name: "com.liferay.gradle.plugins.gulp", version: "1.0.0+"
	}

	repositories {
		mavenLocal()

		maven {
			url "http://cdn.repository.liferay.com/nexus/content/groups/public"
		}
	}
}

configure(subprojects.findAll {!it.subprojects && FileUtil.isChild(it.projectDir, gradle.modulesDir)}) {
	repositories {
		maven {
			url "http://cdn.repository.liferay.com/nexus/content/groups/public"
		}
	}

	apply plugin: "com.liferay.plugin"
}

configure(subprojects.findAll {!it.subprojects && FileUtil.isChild(it.projectDir, gradle.themesDir)}) {
	apply plugin: "com.liferay.gulp"

	buildDir = file("build_gradle")

	tasks.withType(ExecuteGulpTask) {
		dependsOn npmInstall
		dependsOn createLiferayThemeJson
	}

	task build(dependsOn: "gulpBuild")

	task createLiferayThemeJson {
		File liferayThemeJsonFile = file("liferay-theme.json")

		doLast {
			JsonBuilder jsonBuilder = new JsonBuilder()

			jsonBuilder.LiferayTheme {
				appServerPath appServerDir
				appServerPathTheme "${appServerDir}/webapps/${project.name}"
				deployed true
				deployPath deployDir
				themeName project.name
			}

			liferayThemeJsonFile.text = jsonBuilder
		}

		onlyIf {
			!liferayThemeJsonFile.exists()
		}
	}

	task deploy(dependsOn: "gulpDeploy")
}

Project pluginsSDKProject = findProject(":plugins-sdk")

if (pluginsSDKProject) {
	configure(pluginsSDKProject) {
		ant.importBuild "build.xml"

		task build(type: Copy, dependsOn: "war") << {
			from "dist"
			into "build/distributions"
		}
	}
}
